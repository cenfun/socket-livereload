!function(o){const n=function(o){console.log(`[livereload] ${o}`)},e=function(o){const e="livereload-helper";let t=document.querySelector(`.${e}`);if(!t){t=document.createElement("div"),t.className=e;const o="pointer-events: none; position: fixed; z-index: 99998; top: 50%; left: 50%; transform: translate(-50%, -50%); padding: 8px 8px; font-family: Helvetica, Arial, sans-serif; font-size: 14px; color: #fff; border-radius: 5px; background-color: rgba(0,0,0,0.6);";t.style.cssText=o,document.body.appendChild(t)}o?(n(o),t.innerHTML=o,t.style.display="block"):t.style.display="none"};if(o.location!==top.location)return void n("disabled in frame");n("loaded");let t="socket.io.min.js";const c=document.querySelector(".livereload");if(c){const o=c.getAttribute("client");o&&(t=o)}const i=document.createElement("script");i.src=t,i.onload=function(){!function(){if(!o.io)return void n("not found io");const t=o.io.connect("/");let c=!1,i=!1,r=0;const l=function(){t.close(),o.location.reload()};t.on("data",(function(o){c&&(e(o.message),"reload"===o.action&&l())})),t.on("connect",(function(o){n("socket connected"),c&&i&&(e("Reloading for socket reconnected ..."),l()),c=!0,i=!1,r=0})),t.on("connect_error",(function(o){n("socket connection error"),i=!0})),t.on("connect_timeout",(function(o){n("socket connection timeout")})),t.on("reconnecting",(function(o){r+=1,n(`socket reconnecting ... ${r}`),r>20&&(t.close(),n(`socket closed after retry ${r} times`))})),t.on("reconnect_error",(function(o){n("socket reconnection error"),i=!0})),t.on("reconnect_failed",(function(o){n("socket reconnection failed"),i=!0}))}()},i.onerror=function(){n(`failed to load ${t}`)},document.body.appendChild(i)}(window);